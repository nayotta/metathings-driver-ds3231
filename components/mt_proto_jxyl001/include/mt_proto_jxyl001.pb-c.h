/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: mt_proto_jxyl001.proto */

#ifndef PROTOBUF_C_mt_5fproto_5fjxyl001_2eproto__INCLUDED
#define PROTOBUF_C_mt_5fproto_5fjxyl001_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/empty.pb-c.h"

typedef struct _Temp Temp;
typedef struct _Fog Fog;
typedef struct _DataRes DataRes;


/* --- enums --- */


/* --- messages --- */

struct  _Temp
{
  ProtobufCMessage base;
  /*
   * 温湿度地址
   */
  int32_t addr;
  /*
   * 温度
   */
  double temp;
  /*
   * 湿度
   */
  double hum;
  /*
   * 温湿度传感器电压
   */
  double votagetemp;
};
#define TEMP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&temp__descriptor) \
    , 0, 0, 0, 0 }


struct  _Fog
{
  ProtobufCMessage base;
  /*
   * 烟雾地址
   */
  int32_t addr;
  /*
   * 烟雾
   */
  double frog;
  /*
   * 烟雾传感器电压
   */
  double votagefog;
};
#define FOG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fog__descriptor) \
    , 0, 0, 0 }


struct  _DataRes
{
  ProtobufCMessage base;
  int32_t rescode;
  size_t n_temps;
  Temp **temps;
  size_t n_fogs;
  Fog **fogs;
};
#define DATA_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&data_res__descriptor) \
    , 0, 0,NULL, 0,NULL }


/* Temp methods */
void   temp__init
                     (Temp         *message);
size_t temp__get_packed_size
                     (const Temp   *message);
size_t temp__pack
                     (const Temp   *message,
                      uint8_t             *out);
size_t temp__pack_to_buffer
                     (const Temp   *message,
                      ProtobufCBuffer     *buffer);
Temp *
       temp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   temp__free_unpacked
                     (Temp *message,
                      ProtobufCAllocator *allocator);
/* Fog methods */
void   fog__init
                     (Fog         *message);
size_t fog__get_packed_size
                     (const Fog   *message);
size_t fog__pack
                     (const Fog   *message,
                      uint8_t             *out);
size_t fog__pack_to_buffer
                     (const Fog   *message,
                      ProtobufCBuffer     *buffer);
Fog *
       fog__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fog__free_unpacked
                     (Fog *message,
                      ProtobufCAllocator *allocator);
/* DataRes methods */
void   data_res__init
                     (DataRes         *message);
size_t data_res__get_packed_size
                     (const DataRes   *message);
size_t data_res__pack
                     (const DataRes   *message,
                      uint8_t             *out);
size_t data_res__pack_to_buffer
                     (const DataRes   *message,
                      ProtobufCBuffer     *buffer);
DataRes *
       data_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   data_res__free_unpacked
                     (DataRes *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Temp_Closure)
                 (const Temp *message,
                  void *closure_data);
typedef void (*Fog_Closure)
                 (const Fog *message,
                  void *closure_data);
typedef void (*DataRes_Closure)
                 (const DataRes *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Jxyl001Service_Service Jxyl001Service_Service;
struct _Jxyl001Service_Service
{
  ProtobufCService base;
  void (*get_data)(Jxyl001Service_Service *service,
                   const Google__Protobuf__Empty *input,
                   DataRes_Closure closure,
                   void *closure_data);
};
typedef void (*Jxyl001Service_ServiceDestroy)(Jxyl001Service_Service *);
void jxyl001_service__init (Jxyl001Service_Service *service,
                            Jxyl001Service_ServiceDestroy destroy);
#define JXYL001_SERVICE__BASE_INIT \
    { &jxyl001_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define JXYL001_SERVICE__INIT(function_prefix__) \
    { JXYL001_SERVICE__BASE_INIT,\
      function_prefix__ ## get_data  }
void jxyl001_service__get_data(ProtobufCService *service,
                               const Google__Protobuf__Empty *input,
                               DataRes_Closure closure,
                               void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor temp__descriptor;
extern const ProtobufCMessageDescriptor fog__descriptor;
extern const ProtobufCMessageDescriptor data_res__descriptor;
extern const ProtobufCServiceDescriptor jxyl001_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_mt_5fproto_5fjxyl001_2eproto__INCLUDED */
