/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: mt_proto_EA900II.proto */

#ifndef PROTOBUF_C_mt_5fproto_5fEA900II_2eproto__INCLUDED
#define PROTOBUF_C_mt_5fproto_5fEA900II_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/empty.pb-c.h"

typedef struct _Data Data;
typedef struct _Model Model;
typedef struct _Config Config;
typedef struct _DataRes DataRes;
typedef struct _ModelRes ModelRes;
typedef struct _ConfigRes ConfigRes;


/* --- enums --- */


/* --- messages --- */

struct  _Data
{
  ProtobufCMessage base;
  /*
   * 输入电压
   */
  float votagein;
  /*
   * 输出电压
   */
  float votageout;
  /*
   * 输出负载百分比
   */
  float loadpercent;
  /*
   * 输入电源频率
   */
  float freqin;
  /*
   * 电池电压
   */
  float votagebat;
  /*
   * 电池温度
   */
  float temp;
  /*
   * 市电故障 true:故障 false:正常
   */
  protobuf_c_boolean w7;
  /*
   * 电池电压低 true:电压低 false:正常
   */
  protobuf_c_boolean w6;
  /*
   * 旁路/逆变状态 true:旁路 false:逆变
   */
  protobuf_c_boolean w5;
  /*
   * UPS故障 true:故障 false:正常
   */
  protobuf_c_boolean w4;
  /*
   * UPS类型 true:后备机 false:在线机
   */
  protobuf_c_boolean w3;
  /*
   * 系统测试状态 true:测试中 false:无
   */
  protobuf_c_boolean w2;
  /*
   * 系统关机状态 true:关机激活 false:无
   */
  protobuf_c_boolean w1;
  /*
   * 告警音 true:开启 false:关闭
   */
  protobuf_c_boolean w0;
};
#define DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&data__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _Model
{
  ProtobufCMessage base;
  /*
   * ups公司名称
   */
  char *name;
  /*
   * UPS型号
   */
  char *model;
  /*
   * UPS版本
   */
  char *version;
};
#define MODEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Config
{
  ProtobufCMessage base;
  /*
   * 额定电压
   */
  float votage;
  /*
   * 额定电流
   */
  float current;
  /*
   * 电池最大电压
   */
  float batvotage;
  /*
   * 额定频率
   */
  float freq;
};
#define CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&config__descriptor) \
    , 0, 0, 0, 0 }


struct  _DataRes
{
  ProtobufCMessage base;
  int32_t code;
  Data *datas;
};
#define DATA_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&data_res__descriptor) \
    , 0, NULL }


struct  _ModelRes
{
  ProtobufCMessage base;
  int32_t code;
  Model *model;
};
#define MODEL_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&model_res__descriptor) \
    , 0, NULL }


struct  _ConfigRes
{
  ProtobufCMessage base;
  int32_t code;
  Config *config;
};
#define CONFIG_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&config_res__descriptor) \
    , 0, NULL }


/* Data methods */
void   data__init
                     (Data         *message);
size_t data__get_packed_size
                     (const Data   *message);
size_t data__pack
                     (const Data   *message,
                      uint8_t             *out);
size_t data__pack_to_buffer
                     (const Data   *message,
                      ProtobufCBuffer     *buffer);
Data *
       data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   data__free_unpacked
                     (Data *message,
                      ProtobufCAllocator *allocator);
/* Model methods */
void   model__init
                     (Model         *message);
size_t model__get_packed_size
                     (const Model   *message);
size_t model__pack
                     (const Model   *message,
                      uint8_t             *out);
size_t model__pack_to_buffer
                     (const Model   *message,
                      ProtobufCBuffer     *buffer);
Model *
       model__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model__free_unpacked
                     (Model *message,
                      ProtobufCAllocator *allocator);
/* Config methods */
void   config__init
                     (Config         *message);
size_t config__get_packed_size
                     (const Config   *message);
size_t config__pack
                     (const Config   *message,
                      uint8_t             *out);
size_t config__pack_to_buffer
                     (const Config   *message,
                      ProtobufCBuffer     *buffer);
Config *
       config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   config__free_unpacked
                     (Config *message,
                      ProtobufCAllocator *allocator);
/* DataRes methods */
void   data_res__init
                     (DataRes         *message);
size_t data_res__get_packed_size
                     (const DataRes   *message);
size_t data_res__pack
                     (const DataRes   *message,
                      uint8_t             *out);
size_t data_res__pack_to_buffer
                     (const DataRes   *message,
                      ProtobufCBuffer     *buffer);
DataRes *
       data_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   data_res__free_unpacked
                     (DataRes *message,
                      ProtobufCAllocator *allocator);
/* ModelRes methods */
void   model_res__init
                     (ModelRes         *message);
size_t model_res__get_packed_size
                     (const ModelRes   *message);
size_t model_res__pack
                     (const ModelRes   *message,
                      uint8_t             *out);
size_t model_res__pack_to_buffer
                     (const ModelRes   *message,
                      ProtobufCBuffer     *buffer);
ModelRes *
       model_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   model_res__free_unpacked
                     (ModelRes *message,
                      ProtobufCAllocator *allocator);
/* ConfigRes methods */
void   config_res__init
                     (ConfigRes         *message);
size_t config_res__get_packed_size
                     (const ConfigRes   *message);
size_t config_res__pack
                     (const ConfigRes   *message,
                      uint8_t             *out);
size_t config_res__pack_to_buffer
                     (const ConfigRes   *message,
                      ProtobufCBuffer     *buffer);
ConfigRes *
       config_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   config_res__free_unpacked
                     (ConfigRes *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Data_Closure)
                 (const Data *message,
                  void *closure_data);
typedef void (*Model_Closure)
                 (const Model *message,
                  void *closure_data);
typedef void (*Config_Closure)
                 (const Config *message,
                  void *closure_data);
typedef void (*DataRes_Closure)
                 (const DataRes *message,
                  void *closure_data);
typedef void (*ModelRes_Closure)
                 (const ModelRes *message,
                  void *closure_data);
typedef void (*ConfigRes_Closure)
                 (const ConfigRes *message,
                  void *closure_data);

/* --- services --- */

typedef struct _EA900IIService_Service EA900IIService_Service;
struct _EA900IIService_Service
{
  ProtobufCService base;
  void (*get_data)(EA900IIService_Service *service,
                   const Google__Protobuf__Empty *input,
                   DataRes_Closure closure,
                   void *closure_data);
  void (*get_model)(EA900IIService_Service *service,
                    const Google__Protobuf__Empty *input,
                    ModelRes_Closure closure,
                    void *closure_data);
  void (*get_config)(EA900IIService_Service *service,
                     const Google__Protobuf__Empty *input,
                     ConfigRes_Closure closure,
                     void *closure_data);
};
typedef void (*EA900IIService_ServiceDestroy)(EA900IIService_Service *);
void ea900_iiservice__init (EA900IIService_Service *service,
                            EA900IIService_ServiceDestroy destroy);
#define EA900_IISERVICE__BASE_INIT \
    { &ea900_iiservice__descriptor, protobuf_c_service_invoke_internal, NULL }
#define EA900_IISERVICE__INIT(function_prefix__) \
    { EA900_IISERVICE__BASE_INIT,\
      function_prefix__ ## get_data,\
      function_prefix__ ## get_model,\
      function_prefix__ ## get_config  }
void ea900_iiservice__get_data(ProtobufCService *service,
                               const Google__Protobuf__Empty *input,
                               DataRes_Closure closure,
                               void *closure_data);
void ea900_iiservice__get_model(ProtobufCService *service,
                                const Google__Protobuf__Empty *input,
                                ModelRes_Closure closure,
                                void *closure_data);
void ea900_iiservice__get_config(ProtobufCService *service,
                                 const Google__Protobuf__Empty *input,
                                 ConfigRes_Closure closure,
                                 void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor data__descriptor;
extern const ProtobufCMessageDescriptor model__descriptor;
extern const ProtobufCMessageDescriptor config__descriptor;
extern const ProtobufCMessageDescriptor data_res__descriptor;
extern const ProtobufCMessageDescriptor model_res__descriptor;
extern const ProtobufCMessageDescriptor config_res__descriptor;
extern const ProtobufCServiceDescriptor ea900_iiservice__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_mt_5fproto_5fEA900II_2eproto__INCLUDED */
