/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: mt_proto_power001.proto */

#ifndef PROTOBUF_C_mt_5fproto_5fpower001_2eproto__INCLUDED
#define PROTOBUF_C_mt_5fproto_5fpower001_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/empty.pb-c.h"

typedef struct _MtPower001__Data MtPower001__Data;
typedef struct _MtPower001__GetDatasRes MtPower001__GetDatasRes;
typedef struct _MtPower001__GetDataRes MtPower001__GetDataRes;


/* --- enums --- */


/* --- messages --- */

struct  _MtPower001__Data
{
  ProtobufCMessage base;
  /*
   * 电量
   */
  protobuf_c_boolean has_quality;
  float quality;
  /*
   * 电压
   */
  protobuf_c_boolean has_voltage;
  float voltage;
  /*
   * 电流
   */
  protobuf_c_boolean has_current;
  float current;
};
#define MT_POWER001__DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_power001__data__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _MtPower001__GetDatasRes
{
  ProtobufCMessage base;
  protobuf_c_boolean has_rescode;
  int32_t rescode;
  /*
   * 总数
   */
  protobuf_c_boolean has_portnum;
  int32_t portnum;
  /*
   * 每路数据
   */
  size_t n_datas;
  MtPower001__Data **datas;
};
#define MT_POWER001__GET_DATAS_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_power001__get_datas_res__descriptor) \
    , 0,0, 0,0, 0,NULL }


struct  _MtPower001__GetDataRes
{
  ProtobufCMessage base;
  protobuf_c_boolean has_rescode;
  int32_t rescode;
  /*
   * 数据
   */
  MtPower001__Data *data;
};
#define MT_POWER001__GET_DATA_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_power001__get_data_res__descriptor) \
    , 0,0, NULL }


/* MtPower001__Data methods */
void   mt_power001__data__init
                     (MtPower001__Data         *message);
size_t mt_power001__data__get_packed_size
                     (const MtPower001__Data   *message);
size_t mt_power001__data__pack
                     (const MtPower001__Data   *message,
                      uint8_t             *out);
size_t mt_power001__data__pack_to_buffer
                     (const MtPower001__Data   *message,
                      ProtobufCBuffer     *buffer);
MtPower001__Data *
       mt_power001__data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_power001__data__free_unpacked
                     (MtPower001__Data *message,
                      ProtobufCAllocator *allocator);
/* MtPower001__GetDatasRes methods */
void   mt_power001__get_datas_res__init
                     (MtPower001__GetDatasRes         *message);
size_t mt_power001__get_datas_res__get_packed_size
                     (const MtPower001__GetDatasRes   *message);
size_t mt_power001__get_datas_res__pack
                     (const MtPower001__GetDatasRes   *message,
                      uint8_t             *out);
size_t mt_power001__get_datas_res__pack_to_buffer
                     (const MtPower001__GetDatasRes   *message,
                      ProtobufCBuffer     *buffer);
MtPower001__GetDatasRes *
       mt_power001__get_datas_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_power001__get_datas_res__free_unpacked
                     (MtPower001__GetDatasRes *message,
                      ProtobufCAllocator *allocator);
/* MtPower001__GetDataRes methods */
void   mt_power001__get_data_res__init
                     (MtPower001__GetDataRes         *message);
size_t mt_power001__get_data_res__get_packed_size
                     (const MtPower001__GetDataRes   *message);
size_t mt_power001__get_data_res__pack
                     (const MtPower001__GetDataRes   *message,
                      uint8_t             *out);
size_t mt_power001__get_data_res__pack_to_buffer
                     (const MtPower001__GetDataRes   *message,
                      ProtobufCBuffer     *buffer);
MtPower001__GetDataRes *
       mt_power001__get_data_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_power001__get_data_res__free_unpacked
                     (MtPower001__GetDataRes *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MtPower001__Data_Closure)
                 (const MtPower001__Data *message,
                  void *closure_data);
typedef void (*MtPower001__GetDatasRes_Closure)
                 (const MtPower001__GetDatasRes *message,
                  void *closure_data);
typedef void (*MtPower001__GetDataRes_Closure)
                 (const MtPower001__GetDataRes *message,
                  void *closure_data);

/* --- services --- */

typedef struct _MtPower001__Service_Service MtPower001__Service_Service;
struct _MtPower001__Service_Service
{
  ProtobufCService base;
  void (*get_datas)(MtPower001__Service_Service *service,
                    const Google__Protobuf__Empty *input,
                    MtPower001__GetDatasRes_Closure closure,
                    void *closure_data);
  void (*get_data)(MtPower001__Service_Service *service,
                   const Google__Protobuf__Empty *input,
                   MtPower001__GetDataRes_Closure closure,
                   void *closure_data);
};
typedef void (*MtPower001__Service_ServiceDestroy)(MtPower001__Service_Service *);
void mt_power001__service__init (MtPower001__Service_Service *service,
                                 MtPower001__Service_ServiceDestroy destroy);
#define MT_POWER001__SERVICE__BASE_INIT \
    { &mt_power001__service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define MT_POWER001__SERVICE__INIT(function_prefix__) \
    { MT_POWER001__SERVICE__BASE_INIT,\
      function_prefix__ ## get_datas,\
      function_prefix__ ## get_data  }
void mt_power001__service__get_datas(ProtobufCService *service,
                                     const Google__Protobuf__Empty *input,
                                     MtPower001__GetDatasRes_Closure closure,
                                     void *closure_data);
void mt_power001__service__get_data(ProtobufCService *service,
                                    const Google__Protobuf__Empty *input,
                                    MtPower001__GetDataRes_Closure closure,
                                    void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor mt_power001__data__descriptor;
extern const ProtobufCMessageDescriptor mt_power001__get_datas_res__descriptor;
extern const ProtobufCMessageDescriptor mt_power001__get_data_res__descriptor;
extern const ProtobufCServiceDescriptor mt_power001__service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_mt_5fproto_5fpower001_2eproto__INCLUDED */
