/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: mt_proto_charge001.proto */

#ifndef PROTOBUF_C_mt_5fproto_5fcharge001_2eproto__INCLUDED
#define PROTOBUF_C_mt_5fproto_5fcharge001_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/empty.pb-c.h"

typedef struct _MtCharge001__Charge MtCharge001__Charge;
typedef struct _MtCharge001__State MtCharge001__State;
typedef struct _MtCharge001__SetRes MtCharge001__SetRes;
typedef struct _MtCharge001__SetChargeReq MtCharge001__SetChargeReq;
typedef struct _MtCharge001__GetStateRes MtCharge001__GetStateRes;


/* --- enums --- */


/* --- messages --- */

struct  _MtCharge001__Charge
{
  ProtobufCMessage base;
  /*
   * 充电端口
   */
  protobuf_c_boolean has_port;
  int32_t port;
  /*
   * 充电时间
   */
  protobuf_c_boolean has_time;
  int32_t time;
  /*
   * 充电金额 (?设备自己统计用?)
   */
  protobuf_c_boolean has_money;
  int32_t money;
};
#define MT_CHARGE001__CHARGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_charge001__charge__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _MtCharge001__State
{
  ProtobufCMessage base;
  /*
   * 端口编号
   */
  protobuf_c_boolean has_port;
  int32_t port;
  /*
   * 端口状态
   */
  protobuf_c_boolean has_state;
  int32_t state;
  /*
   * 剩余充电时间
   */
  protobuf_c_boolean has_lefttime;
  int32_t lefttime;
  /*
   * 充电功率
   */
  protobuf_c_boolean has_power;
  int32_t power;
};
#define MT_CHARGE001__STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_charge001__state__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _MtCharge001__SetRes
{
  ProtobufCMessage base;
  protobuf_c_boolean has_code;
  int32_t code;
  char *content;
};
#define MT_CHARGE001__SET_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_charge001__set_res__descriptor) \
    , 0,0, NULL }


struct  _MtCharge001__SetChargeReq
{
  ProtobufCMessage base;
  MtCharge001__Charge *charge;
};
#define MT_CHARGE001__SET_CHARGE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_charge001__set_charge_req__descriptor) \
    , NULL }


struct  _MtCharge001__GetStateRes
{
  ProtobufCMessage base;
  /*
   *端口总数
   */
  protobuf_c_boolean has_portnum;
  int32_t portnum;
  /*
   * 端口状态
   */
  size_t n_state;
  MtCharge001__State **state;
};
#define MT_CHARGE001__GET_STATE_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_charge001__get_state_res__descriptor) \
    , 0,0, 0,NULL }


/* MtCharge001__Charge methods */
void   mt_charge001__charge__init
                     (MtCharge001__Charge         *message);
size_t mt_charge001__charge__get_packed_size
                     (const MtCharge001__Charge   *message);
size_t mt_charge001__charge__pack
                     (const MtCharge001__Charge   *message,
                      uint8_t             *out);
size_t mt_charge001__charge__pack_to_buffer
                     (const MtCharge001__Charge   *message,
                      ProtobufCBuffer     *buffer);
MtCharge001__Charge *
       mt_charge001__charge__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_charge001__charge__free_unpacked
                     (MtCharge001__Charge *message,
                      ProtobufCAllocator *allocator);
/* MtCharge001__State methods */
void   mt_charge001__state__init
                     (MtCharge001__State         *message);
size_t mt_charge001__state__get_packed_size
                     (const MtCharge001__State   *message);
size_t mt_charge001__state__pack
                     (const MtCharge001__State   *message,
                      uint8_t             *out);
size_t mt_charge001__state__pack_to_buffer
                     (const MtCharge001__State   *message,
                      ProtobufCBuffer     *buffer);
MtCharge001__State *
       mt_charge001__state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_charge001__state__free_unpacked
                     (MtCharge001__State *message,
                      ProtobufCAllocator *allocator);
/* MtCharge001__SetRes methods */
void   mt_charge001__set_res__init
                     (MtCharge001__SetRes         *message);
size_t mt_charge001__set_res__get_packed_size
                     (const MtCharge001__SetRes   *message);
size_t mt_charge001__set_res__pack
                     (const MtCharge001__SetRes   *message,
                      uint8_t             *out);
size_t mt_charge001__set_res__pack_to_buffer
                     (const MtCharge001__SetRes   *message,
                      ProtobufCBuffer     *buffer);
MtCharge001__SetRes *
       mt_charge001__set_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_charge001__set_res__free_unpacked
                     (MtCharge001__SetRes *message,
                      ProtobufCAllocator *allocator);
/* MtCharge001__SetChargeReq methods */
void   mt_charge001__set_charge_req__init
                     (MtCharge001__SetChargeReq         *message);
size_t mt_charge001__set_charge_req__get_packed_size
                     (const MtCharge001__SetChargeReq   *message);
size_t mt_charge001__set_charge_req__pack
                     (const MtCharge001__SetChargeReq   *message,
                      uint8_t             *out);
size_t mt_charge001__set_charge_req__pack_to_buffer
                     (const MtCharge001__SetChargeReq   *message,
                      ProtobufCBuffer     *buffer);
MtCharge001__SetChargeReq *
       mt_charge001__set_charge_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_charge001__set_charge_req__free_unpacked
                     (MtCharge001__SetChargeReq *message,
                      ProtobufCAllocator *allocator);
/* MtCharge001__GetStateRes methods */
void   mt_charge001__get_state_res__init
                     (MtCharge001__GetStateRes         *message);
size_t mt_charge001__get_state_res__get_packed_size
                     (const MtCharge001__GetStateRes   *message);
size_t mt_charge001__get_state_res__pack
                     (const MtCharge001__GetStateRes   *message,
                      uint8_t             *out);
size_t mt_charge001__get_state_res__pack_to_buffer
                     (const MtCharge001__GetStateRes   *message,
                      ProtobufCBuffer     *buffer);
MtCharge001__GetStateRes *
       mt_charge001__get_state_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_charge001__get_state_res__free_unpacked
                     (MtCharge001__GetStateRes *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MtCharge001__Charge_Closure)
                 (const MtCharge001__Charge *message,
                  void *closure_data);
typedef void (*MtCharge001__State_Closure)
                 (const MtCharge001__State *message,
                  void *closure_data);
typedef void (*MtCharge001__SetRes_Closure)
                 (const MtCharge001__SetRes *message,
                  void *closure_data);
typedef void (*MtCharge001__SetChargeReq_Closure)
                 (const MtCharge001__SetChargeReq *message,
                  void *closure_data);
typedef void (*MtCharge001__GetStateRes_Closure)
                 (const MtCharge001__GetStateRes *message,
                  void *closure_data);

/* --- services --- */

typedef struct _MtCharge001__Service_Service MtCharge001__Service_Service;
struct _MtCharge001__Service_Service
{
  ProtobufCService base;
  void (*set_charge)(MtCharge001__Service_Service *service,
                     const MtCharge001__SetChargeReq *input,
                     MtCharge001__SetRes_Closure closure,
                     void *closure_data);
  void (*get_state)(MtCharge001__Service_Service *service,
                    const Google__Protobuf__Empty *input,
                    MtCharge001__GetStateRes_Closure closure,
                    void *closure_data);
};
typedef void (*MtCharge001__Service_ServiceDestroy)(MtCharge001__Service_Service *);
void mt_charge001__service__init (MtCharge001__Service_Service *service,
                                  MtCharge001__Service_ServiceDestroy destroy);
#define MT_CHARGE001__SERVICE__BASE_INIT \
    { &mt_charge001__service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define MT_CHARGE001__SERVICE__INIT(function_prefix__) \
    { MT_CHARGE001__SERVICE__BASE_INIT,\
      function_prefix__ ## set_charge,\
      function_prefix__ ## get_state  }
void mt_charge001__service__set_charge(ProtobufCService *service,
                                       const MtCharge001__SetChargeReq *input,
                                       MtCharge001__SetRes_Closure closure,
                                       void *closure_data);
void mt_charge001__service__get_state(ProtobufCService *service,
                                      const Google__Protobuf__Empty *input,
                                      MtCharge001__GetStateRes_Closure closure,
                                      void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor mt_charge001__charge__descriptor;
extern const ProtobufCMessageDescriptor mt_charge001__state__descriptor;
extern const ProtobufCMessageDescriptor mt_charge001__set_res__descriptor;
extern const ProtobufCMessageDescriptor mt_charge001__set_charge_req__descriptor;
extern const ProtobufCMessageDescriptor mt_charge001__get_state_res__descriptor;
extern const ProtobufCServiceDescriptor mt_charge001__service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_mt_5fproto_5fcharge001_2eproto__INCLUDED */
