/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: mt_proto_aew100.proto */

#ifndef PROTOBUF_C_mt_5fproto_5faew100_2eproto__INCLUDED
#define PROTOBUF_C_mt_5fproto_5faew100_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _MtAew100__Data MtAew100__Data;
typedef struct _MtAew100__GetDataReq MtAew100__GetDataReq;
typedef struct _MtAew100__GetDataRes MtAew100__GetDataRes;
typedef struct _MtAew100__CurrentData MtAew100__CurrentData;
typedef struct _MtAew100__GetCurrentReq MtAew100__GetCurrentReq;
typedef struct _MtAew100__GetCurrentRes MtAew100__GetCurrentRes;


/* --- enums --- */


/* --- messages --- */

struct  _MtAew100__Data
{
  ProtobufCMessage base;
  /*
   * 电流 单位:A
   */
  protobuf_c_boolean has_currenta;
  double currenta;
  protobuf_c_boolean has_currentb;
  double currentb;
  protobuf_c_boolean has_currentc;
  double currentc;
  /*
   * 电压 单位:V
   */
  protobuf_c_boolean has_votagea;
  double votagea;
  protobuf_c_boolean has_votageb;
  double votageb;
  protobuf_c_boolean has_votagec;
  double votagec;
  /*
   * 有功功率 单位:W
   */
  protobuf_c_boolean has_activepowera;
  double activepowera;
  protobuf_c_boolean has_activepowerb;
  double activepowerb;
  protobuf_c_boolean has_activepowerc;
  double activepowerc;
  /*
   * 无功功率 单位:var
   */
  protobuf_c_boolean has_reactivepowera;
  double reactivepowera;
  protobuf_c_boolean has_reactivepowerb;
  double reactivepowerb;
  protobuf_c_boolean has_reactivepowerc;
  double reactivepowerc;
  /*
   * 功率因素 单位:%
   */
  protobuf_c_boolean has_powerfactora;
  double powerfactora;
  protobuf_c_boolean has_powerfactorb;
  double powerfactorb;
  protobuf_c_boolean has_powerfactorc;
  double powerfactorc;
  /*
   * 电量 单位:kwh
   */
  protobuf_c_boolean has_qualitya;
  double qualitya;
  protobuf_c_boolean has_qualityb;
  double qualityb;
  protobuf_c_boolean has_qualityc;
  double qualityc;
  /*
   *温度 单位:℃
   */
  protobuf_c_boolean has_tempa;
  double tempa;
  protobuf_c_boolean has_tempb;
  double tempb;
  protobuf_c_boolean has_tempc;
  double tempc;
  /*
   * 当月最大功率 单位:W
   */
  protobuf_c_boolean has_maxpowera;
  double maxpowera;
  protobuf_c_boolean has_maxpowerb;
  double maxpowerb;
  protobuf_c_boolean has_maxpowerc;
  double maxpowerc;
};
#define MT_AEW100__DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_aew100__data__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _MtAew100__GetDataReq
{
  ProtobufCMessage base;
  protobuf_c_boolean has_addr;
  int32_t addr;
};
#define MT_AEW100__GET_DATA_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_aew100__get_data_req__descriptor) \
    , 0,0 }


struct  _MtAew100__GetDataRes
{
  ProtobufCMessage base;
  protobuf_c_boolean has_code;
  int32_t code;
  MtAew100__Data *data;
};
#define MT_AEW100__GET_DATA_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_aew100__get_data_res__descriptor) \
    , 0,0, NULL }


struct  _MtAew100__CurrentData
{
  ProtobufCMessage base;
  /*
   * A相电流 单位A
   */
  protobuf_c_boolean has_currenta;
  double currenta;
  /*
   * B相电流 单位A
   */
  protobuf_c_boolean has_currentb;
  double currentb;
  /*
   * C相电流 单位A
   */
  protobuf_c_boolean has_currentc;
  double currentc;
};
#define MT_AEW100__CURRENT_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_aew100__current_data__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _MtAew100__GetCurrentReq
{
  ProtobufCMessage base;
  protobuf_c_boolean has_addr;
  int32_t addr;
};
#define MT_AEW100__GET_CURRENT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_aew100__get_current_req__descriptor) \
    , 0,0 }


struct  _MtAew100__GetCurrentRes
{
  ProtobufCMessage base;
  protobuf_c_boolean has_rescode;
  int32_t rescode;
  MtAew100__CurrentData *currentdata;
};
#define MT_AEW100__GET_CURRENT_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mt_aew100__get_current_res__descriptor) \
    , 0,0, NULL }


/* MtAew100__Data methods */
void   mt_aew100__data__init
                     (MtAew100__Data         *message);
size_t mt_aew100__data__get_packed_size
                     (const MtAew100__Data   *message);
size_t mt_aew100__data__pack
                     (const MtAew100__Data   *message,
                      uint8_t             *out);
size_t mt_aew100__data__pack_to_buffer
                     (const MtAew100__Data   *message,
                      ProtobufCBuffer     *buffer);
MtAew100__Data *
       mt_aew100__data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_aew100__data__free_unpacked
                     (MtAew100__Data *message,
                      ProtobufCAllocator *allocator);
/* MtAew100__GetDataReq methods */
void   mt_aew100__get_data_req__init
                     (MtAew100__GetDataReq         *message);
size_t mt_aew100__get_data_req__get_packed_size
                     (const MtAew100__GetDataReq   *message);
size_t mt_aew100__get_data_req__pack
                     (const MtAew100__GetDataReq   *message,
                      uint8_t             *out);
size_t mt_aew100__get_data_req__pack_to_buffer
                     (const MtAew100__GetDataReq   *message,
                      ProtobufCBuffer     *buffer);
MtAew100__GetDataReq *
       mt_aew100__get_data_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_aew100__get_data_req__free_unpacked
                     (MtAew100__GetDataReq *message,
                      ProtobufCAllocator *allocator);
/* MtAew100__GetDataRes methods */
void   mt_aew100__get_data_res__init
                     (MtAew100__GetDataRes         *message);
size_t mt_aew100__get_data_res__get_packed_size
                     (const MtAew100__GetDataRes   *message);
size_t mt_aew100__get_data_res__pack
                     (const MtAew100__GetDataRes   *message,
                      uint8_t             *out);
size_t mt_aew100__get_data_res__pack_to_buffer
                     (const MtAew100__GetDataRes   *message,
                      ProtobufCBuffer     *buffer);
MtAew100__GetDataRes *
       mt_aew100__get_data_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_aew100__get_data_res__free_unpacked
                     (MtAew100__GetDataRes *message,
                      ProtobufCAllocator *allocator);
/* MtAew100__CurrentData methods */
void   mt_aew100__current_data__init
                     (MtAew100__CurrentData         *message);
size_t mt_aew100__current_data__get_packed_size
                     (const MtAew100__CurrentData   *message);
size_t mt_aew100__current_data__pack
                     (const MtAew100__CurrentData   *message,
                      uint8_t             *out);
size_t mt_aew100__current_data__pack_to_buffer
                     (const MtAew100__CurrentData   *message,
                      ProtobufCBuffer     *buffer);
MtAew100__CurrentData *
       mt_aew100__current_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_aew100__current_data__free_unpacked
                     (MtAew100__CurrentData *message,
                      ProtobufCAllocator *allocator);
/* MtAew100__GetCurrentReq methods */
void   mt_aew100__get_current_req__init
                     (MtAew100__GetCurrentReq         *message);
size_t mt_aew100__get_current_req__get_packed_size
                     (const MtAew100__GetCurrentReq   *message);
size_t mt_aew100__get_current_req__pack
                     (const MtAew100__GetCurrentReq   *message,
                      uint8_t             *out);
size_t mt_aew100__get_current_req__pack_to_buffer
                     (const MtAew100__GetCurrentReq   *message,
                      ProtobufCBuffer     *buffer);
MtAew100__GetCurrentReq *
       mt_aew100__get_current_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_aew100__get_current_req__free_unpacked
                     (MtAew100__GetCurrentReq *message,
                      ProtobufCAllocator *allocator);
/* MtAew100__GetCurrentRes methods */
void   mt_aew100__get_current_res__init
                     (MtAew100__GetCurrentRes         *message);
size_t mt_aew100__get_current_res__get_packed_size
                     (const MtAew100__GetCurrentRes   *message);
size_t mt_aew100__get_current_res__pack
                     (const MtAew100__GetCurrentRes   *message,
                      uint8_t             *out);
size_t mt_aew100__get_current_res__pack_to_buffer
                     (const MtAew100__GetCurrentRes   *message,
                      ProtobufCBuffer     *buffer);
MtAew100__GetCurrentRes *
       mt_aew100__get_current_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mt_aew100__get_current_res__free_unpacked
                     (MtAew100__GetCurrentRes *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MtAew100__Data_Closure)
                 (const MtAew100__Data *message,
                  void *closure_data);
typedef void (*MtAew100__GetDataReq_Closure)
                 (const MtAew100__GetDataReq *message,
                  void *closure_data);
typedef void (*MtAew100__GetDataRes_Closure)
                 (const MtAew100__GetDataRes *message,
                  void *closure_data);
typedef void (*MtAew100__CurrentData_Closure)
                 (const MtAew100__CurrentData *message,
                  void *closure_data);
typedef void (*MtAew100__GetCurrentReq_Closure)
                 (const MtAew100__GetCurrentReq *message,
                  void *closure_data);
typedef void (*MtAew100__GetCurrentRes_Closure)
                 (const MtAew100__GetCurrentRes *message,
                  void *closure_data);

/* --- services --- */

typedef struct _MtAew100__Aew100Service_Service MtAew100__Aew100Service_Service;
struct _MtAew100__Aew100Service_Service
{
  ProtobufCService base;
  void (*get_data)(MtAew100__Aew100Service_Service *service,
                   const MtAew100__GetDataReq *input,
                   MtAew100__GetDataRes_Closure closure,
                   void *closure_data);
  void (*get_current)(MtAew100__Aew100Service_Service *service,
                      const MtAew100__GetCurrentReq *input,
                      MtAew100__GetCurrentRes_Closure closure,
                      void *closure_data);
};
typedef void (*MtAew100__Aew100Service_ServiceDestroy)(MtAew100__Aew100Service_Service *);
void mt_aew100__aew100_service__init (MtAew100__Aew100Service_Service *service,
                                      MtAew100__Aew100Service_ServiceDestroy destroy);
#define MT_AEW100__AEW100_SERVICE__BASE_INIT \
    { &mt_aew100__aew100_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define MT_AEW100__AEW100_SERVICE__INIT(function_prefix__) \
    { MT_AEW100__AEW100_SERVICE__BASE_INIT,\
      function_prefix__ ## get_data,\
      function_prefix__ ## get_current  }
void mt_aew100__aew100_service__get_data(ProtobufCService *service,
                                         const MtAew100__GetDataReq *input,
                                         MtAew100__GetDataRes_Closure closure,
                                         void *closure_data);
void mt_aew100__aew100_service__get_current(ProtobufCService *service,
                                            const MtAew100__GetCurrentReq *input,
                                            MtAew100__GetCurrentRes_Closure closure,
                                            void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor mt_aew100__data__descriptor;
extern const ProtobufCMessageDescriptor mt_aew100__get_data_req__descriptor;
extern const ProtobufCMessageDescriptor mt_aew100__get_data_res__descriptor;
extern const ProtobufCMessageDescriptor mt_aew100__current_data__descriptor;
extern const ProtobufCMessageDescriptor mt_aew100__get_current_req__descriptor;
extern const ProtobufCMessageDescriptor mt_aew100__get_current_res__descriptor;
extern const ProtobufCServiceDescriptor mt_aew100__aew100_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_mt_5fproto_5faew100_2eproto__INCLUDED */
